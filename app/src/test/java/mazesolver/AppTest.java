/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mazesolver;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;

class AppTest {
    @Test void useFile() throws IOException {
        Matrix matrix = new Matrix();

        int[][] maze = matrix.createFromFile("small-maze.txt");

        int count = App.findCount(maze, matrix.getEntranceX(),matrix.getEntranceY(),matrix.getExitX(),matrix.getExitY());

        assertEquals(count, 1);
        assertEquals(matrix.getEntranceX(), 0);
        assertEquals(matrix.getEntranceY(), 0);
        assertEquals(matrix.getExitX(), 3);
        assertEquals(matrix.getExitY(), 3);
    }

    @Test void useFile12Paths() throws IOException {
        Matrix matrix = new Matrix();

        int[][] maze = matrix.createFromFile("maze-12-paths.txt");

        int count = App.findCount(maze, matrix.getEntranceX(),matrix.getEntranceY(),matrix.getExitX(),matrix.getExitY());

        assertEquals(1, count);
        assertEquals(2, matrix.getEntranceX());
        assertEquals(1, matrix.getEntranceY());
        assertEquals(3, matrix.getExitX());
        assertEquals(2, matrix.getExitY());
    }

    @Test void useOriginalFile() throws IOException {
        Matrix matrix = new Matrix();

        int[][] maze = matrix.createFromFile("maze.txt");

        int count = App.findCount(maze, matrix.getEntranceX(),matrix.getEntranceY(),matrix.getExitX(),matrix.getExitY());

        assertEquals(count, 12);
        assertEquals(0, matrix.getEntranceX());
        assertEquals(1, matrix.getEntranceY());
        assertEquals(40, matrix.getExitX());
        assertEquals(39, matrix.getExitY());
    }

    @Test void mazeNoPaths() throws IOException {
        Matrix matrix = new Matrix();

        int[][] maze = matrix.createFromFile("maze-no-paths.txt");

        int count = App.findCount(maze, matrix.getEntranceX(),matrix.getEntranceY(),matrix.getExitX(),matrix.getExitY());

        assertEquals(count, 0);
        assertEquals(0, matrix.getEntranceX());
        assertEquals(0, matrix.getEntranceY());
        assertEquals(3, matrix.getExitX());
        assertEquals(3, matrix.getExitY());
    }
}
